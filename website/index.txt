h1. <a href="http://lockdown.rubyforge.org">Lockdown</a>

h2. What

Lockdown is a authentication/authorization system for RubyOnRails (ver 2.x). While Merb functionality is in place, it is not complete.  There will be a release solely focused on getting the Merb functionality up to par with Rails.

h2. Consolidation of information

Maintaining this page, the wiki at GitHub, the Google Group and no issue tracker is not an ideal setup.  So, everything is moving to "stonean.com":http://stonean.com where I'm giving "Redmine":http://redmine.org a shot a running everything for me. I'll be posting release announcements to the news feed for each project and keeping the docs up-to-date.  Hopefully this will be better for everyone.

Thanks for your interest in Lockdown,<br/>
-andy

h2. Installing

<pre>
$ sudo gem install lockdown
$ cd <your_project_directory>
$ lockdown .
</pre>

This will create a "lockdown" directory in the lib dir add two files: init.rb and session.rb.  
Modify init.rb to set configuration options and define the permissions and user groups that apply to your system.

<strong> Please keep the following in mind:</strong>
<ul>
<li><strong>All Permissions are defined in init.rb, they cannot be defined via the administration screens.</strong></li>
<li><strong>All User Groups should be defined in init.rb. The administration screens can be used to create user groups, but doing so should be reserved for the unexpected. Creating User Groups via the administration screens will only add more work for you if you want to run tests using those groups.</strong></li>
<li><strong>Lockdown will sync up the rules (Permissions and User Groups) defined in init.rb with your database.  You can turn off this feature.</strong></li>
</ul>

To help you with your new application, Lockdown comes with a generator called lockdown that has various options for you to pick which templates you desire.

<pre>
$ cd <your_project_directory>
$ ./script/generate lockdown --all
</pre>

This will install resources such as:
<ul>
  <li>Models</li>
  <li>Controllers</li>
  <li>Views</li>
  <li>Helpers</li>
  <li>Migrations</li>
  <li>Routes</li>
</ul>

Please refer to the <a href="generator.html">generator page</a> for more detail.

h2. How it works

When Lockdown is installed, it adds the following line to your environment.rb (init.rb for Merb):
<pre>
  require "lockdown/init"
</pre>
This is the default init.rb included with Lockdown:
<pre syntax="ruby">
require "lockdown"
require File.join(File.dirname(__FILE__), "session")

Lockdown::System.configure do

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Configuration Options
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Options with defaults:
  #
  # Set timeout to 1 hour:
  #       options[:session_timeout] = (60 * 60)
  #
  # Set system to logout if unauthorized access is attempted:
  #       options[:logout_on_access_violation] = false
  #
  # Set redirect to path on unauthorized access attempt:
  #       options[:access_denied_path] = "/"
  #
  # Set redirect to path on successful login:
  #       options[:successful_login_path] = "/"
  #
  # Set the system to sync the Permissions and UserGroups defined here
  # with the database. 
  #       options[:sync_init_rb_with_db] = true
  #
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Define permissions
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #
  # set_permission(:product_management, all_methods(:products))
  #
  # :product_management is the name of the permission which is later
  # referenced by the set_user_group method
  #
  # :all_methods(:products) will return an array of all controller actions
  # for the products controller
  #
  # if products is your standard RESTful resource you'll get:
  #   ["products/index , "products/show",
  #    "products/new", "products/edit",
  #    "products/create", "products/update",
  #    "products/destroy"]
  #
  # You can pass multiple parameters to concat permissions such as:
  #      
  #	  set_permission(:security_management,all_methods(:users),
  #                                       all_methods(:user_groups),
  #                                       all_methods(:permissions) )
  #
  # In addition to all_methods(:controller) there are:
  #
  #       only_methods(:controller, :only_method_1, :only_method_2)
  #
  #       all_except_methods(:controller, :except_method_1, :except_method_2)
  #
  # Some other sample permissions:
  # 
  #  set_permission(:sessions, all_methods(:sessions))
  #  set_permission(:my_account, only_methods(:users, :edit, :update, :show))
  # 
  # Define your permissions here:

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Built-in user groups
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #  You can assign the above permission to one of the built-in user groups
  #  by using the following:
  # 
  #  To allow public access on the permissions :sessions and :home:
  #    set_public_access :sessions, :home
  #     
  #  Restrict :my_account access to only authenticated users:
  #    set_protected_access :my_account
  #
  # Define the built-in user groups here:

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Define user groups
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #
  #  set_user_group(:catalog_management, :category_management, 
  #                                      :product_management) 
  #
  #  :catalog_management is the name of the user group
  #  :category_management and :product_management refer to permission names
  #
  # 
  # Define your user groups here:

end 
</pre>

As you can see, the first line requires lockdown.  This will load the Lockdown system which consists of various parts:
<ul>
  <li>
    Controller<br/>
    <p>The controller functionality will add before filters to test each request agains the defined access_rights for the current user.  If the current request is not in the access_rights list, access right is denied.</p>
  </li>  
  <li>
    Model<br/>
    <p>The model functionality will automatically set the updated_by/created_by fields of your model to the current_profile_id.</p>
  </li>  
  <li>
    View<br/>
    <p>The view functionality intercepts the link_to method (aliases it).  If the current user does not have rights to the link, the link will not show.<br/>There is also a link_to_or_show method (same params as link_to) that will print out just the name of the link (no anchor tag) if the current user does not have access. </p>
  </li>
</ul>

When referring to access rights: if you have a standard REST users controller, the access rights would be:
<pre>
  users/index
  users/show
  users/edit
  users/update
  users/new
  users/create
  users/destroy (delete for Merb)
</pre>


h2. The internals

All configuration of Lockdown (Permissions and User Groups) are done in lib/lockdown/init.rb.  The database functionality is merely an extension of the definitions to allow for the dynamic creation of User Groups.  Permissions can not be created via the administration screens.

Lockdown doesn't have a concept of Roles. Instead, Lockdown users can be associated to one or many User Groups to allow for flexibility.  In addition, you can use the admin screens to add new User Groups to the database. User groups are nothing more than a grouping mechanism for Permissions to ease management.

Here are the parts to Lockdown:

<div style="text-align:center">
!model.jpg!
</div>

<ul>
 <li><strong>Profiles</strong><br/>
    <p>The profile model contains all non-user information related to person.  Lockdown uses the profile record as the reference for updated_by and created_by.  This allows you to remove the user record completely when you want to revoke access, but you still retain the foreign key for history.<br/>Here are the fields you have to start with:</p>
    <ul>
      <li>first_name : string</li>
      <li>last_name : string</li>
      <li>email : string</li>
    </ul>
<br/>
  </li>
 <li><strong>Users</strong><br/>
    <p>The user model contains all user information related to person.<br/>Here are the fields you have to start with:</p>
    <ul>
      <li>login : string</li>
      <li>crypted_password : string</li>
      <li>salt : string</li>
      <li>profile_id : integer</li>
    </ul>
<br/>
  </li>
 <li><strong>User Groups</strong><br/>
    <p>User Groups exist only to group Permissions.  All functionality for your site should be covered by the user groups you define in init.rb.  You can use the admin screen to create new user groups if the need arises. The database model only has one field:  </p>
    <ul>
      <li>name : string</li>
    </ul>
<br/>
  </li>
 <li><strong>Permissions</strong><br/>
    <p>Permissions are the security building blocks of your system and are defined in init.rb.  A permission maps to controller(s)/action(s) in your system. Please refer back to the documenation in init.rb on how to create permissions.
 As permissions relate to system functionality, they cannot be created via the admin screen.  The database model only has one field:  </p>
    <ul>
      <li>name : string</li>
    </ul>
  </li>
</ul>
  
h2. Roadmap to 1.0

<strong>**this is tentative and the feature order may change</strong>

<ul>
  <li><strong>0.5.0: </strong>More generators to ease installation into existing projects</li>
  <li><strong>0.6.0: </strong>Password reset/reminder, Registration page template generators</li>
  <li><strong>0.7.0: </strong>OpenId support</li>
  <li><strong>0.8.0: </strong>RSpec tests and helper methods for your application</li>
  <li><strong>0.9.0: </strong>Merb Support</li>
  <li><strong>1.0.0: </strong>Model level security</li>
</ul>

h2. Github

The Clone URL: git://github.com/stonean/lockdown.git

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/.

I'm new to git and this whole opensource project admin gig, so please be patient with my stumbling around.

h2. Contact

Please use the "forum":http://stonean.com/projects/lockdown/boards to ask questions and the "issue tracker":http://stonean.com/projects/lockdown/issues to report problems or submit a pull request.

h2. License

This code is free to use under the terms of the MIT license.

Copyright (c) 2008 Andrew Stone

