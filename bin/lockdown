#!/usr/bin/env ruby

require "rubigen"
require "rubigen/scripts/generate"

require File.join(File.dirname(__FILE__), "..", "lib", "lockdown_generator")

#
#  Created on 2008-4-21.
#  Copyright (c) 2008. All rights reserved.

MERB_CONFIG = 'config/init.rb'
RAILS_CONFIG = 'config/environment.rb'

def config_file
  if File.exists?(MERB_CONFIG)
    MERB_CONFIG
  elsif File.exists?(RAILS_CONFIG)
    RAILS_CONFIG
  else
    raise NotImplementedError, "Configuration file not found.  Looking for init.rb (Merb) or environment.rb (Rails)"
  end
end

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'optparse'

OPTIONS = {
  :path     => File.expand_path('.')
}

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
Lockdown will add access.rb and session.rb to the lib/lockdown directory and require them in #{config_file}.

Usage: #{File.basename($0)} [options]

Options are:
BANNER
  opts.separator ""
  opts.on("-p", "--path=PATH", String,
          "The root path for selecting files",
          "Default: [current directory]") { |OPTIONS[:path]| }
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)
end 

puts <<-MSG
... Installing Lockdown
MSG

source = RubiGen::PathSource.new(:application,
                                   File.join(File.dirname(__FILE__), "../app_generators"))
RubiGen::Base.reset_sources
RubiGen::Base.append_sources source
RubiGen::Scripts::Generate.new.run(ARGV, :generator => 'lockdown')


File.open(config, "a") do |f|
  f << %Q(\nrequire "lockdown/access"\n)
  f << %Q(require "lockdown/session"\n\n)
end

puts <<-MSG
... Modified #{config_file} by adding:
    require "lockdown/access"
    require "lockdown/session"
MSG

puts <<-MSG
... You are now locked down.  To open up access to your application 
    please modify lib/lockdown/access.rb.  This is where you'll 
    add permissions and create user groups.

    To modify the contents of your session and to add access 
    methods, modify lib/lockdown/session.rb.

    If you want to know more, please visit:

    http://lockdown.rubyforge.org

    If you have any suggestions, comments or issues 
    please visit the Lockdown Google group:

    http://groups.google.com/group/stonean_lockdown?hl=en
MSG
